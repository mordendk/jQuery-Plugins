/*
*
* jQuery Align Height Plugin v. 0.1 I guess
* I't takes a collection of elements and align their height on a per row basis, for visually aligning flexible grids
* Visit http://morden.dk/2011/handy-jquery-plugin-for-aligning-height for examples and further explanation
*
* Usage: $( 'selector' ).alignHeight( sizes );
* Example: $('#page > div[class^="col"]').alignHeight();
*
*/
; (function ($) {$.fn.alignHeight = function (options) {var $el = $(this); if ($el.size() < 2) { return $el; }var opts = $.extend({}, $.fn.alignHeight.defaults, options), rows = $.fn.alignHeight.getRows($el, opts.sizes); $.fn.alignHeight.setHeightsToRowMax(rows); return $el;	}; $.fn.alignHeight.defaults = { sizes: { 'col': 100, 'col_25': 25, 'col_33': 33.33, 'col_50': 50, 'col_75': 75, 'col_100': 100} }; $.fn.alignHeight.getRows = function ($el, sizes) {var rows = []; for (var i = 0, total = 0, cols = 0, l = $el.size(); i < l; i++) { total += parseInt(sizes[$el.eq(i).attr('class').split(' ')[0]], 10); if (Math.ceil(total) > 100) { rows.push($el.slice(cols, i)); total = 0; cols = i; i--; } else if (i + 1 >= l) { rows.push($el.slice(cols, i + 1)); } }	return rows;}; $.fn.alignHeight.setHeightsToRowMax = function (rows) { for (var i = 0, l = rows.length; i < l; i++) { var $row = $(rows[i]); if ($row.length > 1) { $row.height($.fn.alignHeight.findMaxHeight($row)); } } }; $.fn.alignHeight.findMaxHeight = function ($el) {	var maxHeight = $el.height(), curHeight; for (var i = 1, l = $el.size(); i < l; i++) { curHeight = $el.eq(i).height(); maxHeight = (curHeight > maxHeight) ? curHeight : maxHeight; }return maxHeight;};} (this.jQuery));